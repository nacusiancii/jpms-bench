name: Benchmark

on:
  workflow_dispatch:

permissions:
  contents: write  # needed to commit results back to the repo

jobs:
  benchmark:
    runs-on: ubuntu-latest

    env:
      RUNS: "20"
      WARMUP: "1"
      NO_BUILD: "0"
      PORT: "8080"
      VARIANT: "jpms-java24-boot4-min"
      JAVA_OPTS: "-Xms64m -Xmx64m -XX:+UseSerialGC -XX:-TieredCompilation -Xshare:auto"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "24"

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-

      - name: Make scripts executable
        run: |
          chmod +x mvnw
          chmod +x bench/measure.sh || true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build (clean package, tests skipped)
        run: ./mvnw -q --no-transfer-progress -DskipTests clean package

      - name: Run benchmark (Linux)
        shell: bash
        env:
          RUNS: ${{ env.RUNS }}
          WARMUP: ${{ env.WARMUP }}
          NO_BUILD: "1"
          PORT: ${{ env.PORT }}
          VARIANT: ${{ env.VARIANT }}
          JAVA_OPTS: ${{ env.JAVA_OPTS }}
        run: |
          echo "RUNS=$RUNS WARMUP=$WARMUP PORT=$PORT VARIANT=$VARIANT"
          bash bench/measure.sh "/usr/lib/jvm/temurin-24-jdk" "$PORT"

      - name: Show results
        run: |
          echo "---- bench/results.json ----"
          cat bench/results.json

      - name: Commit results
        run: |
          git fetch origin "${{ github.ref }}" || true
          git config user.name "github-actions[bot]"
          git config user.email "muralik2405@gmail.com"
          git add bench/results.json
          if git diff --cached --quiet; then
            echo "No changes in bench/results.json to commit"
          else
            git commit -m "chore(benchmark): update results.json [skip ci]"
            git push origin HEAD:${{ github.ref }}
          fi